State 4 conflicts: 1 shift/reduce
State 6 conflicts: 1 shift/reduce
State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 36 conflicts: 6 shift/reduce
State 40 conflicts: 1 shift/reduce
State 73 conflicts: 3 shift/reduce, 1 reduce/reduce
State 92 conflicts: 2 shift/reduce
State 110 conflicts: 5 shift/reduce
State 120 conflicts: 2 shift/reduce
State 127 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 199 conflicts: 2 reduce/reduce
State 253 conflicts: 2 shift/reduce


Grammar

    0 $accept: module $end

    1 module: imports start_module exports statements T_MODULEEND

    2 start_module: T_MODULE
    3             | T_MODULE T_NAME

    4 imports: imports import
    5        | /* empty */

    6 import: proc_dec
    7       | type_dec
    8       | var_dec
    9       | import_dec

   10 exports: T_L_BRACK name_list T_R_BRACK
   11        | /* empty */

   12 proc_dec: proc_dec_spec T_NAME
   13         | proc_dec_spec T_NAME pspec
   14         | proc_dec_spec T_NAME T_EQUALS T_NAME

   15 proc_dec_spec: T_LSPEC
   16              | T_PSPEC

   17 pspec: T_L_BRACK t_list T_R_BRACK
   18      | T_L_BRACK t_list T_R_BRACK T_SLASH scalar_type

   19 t_list: t_list T_COMMA scalar_type
   20       | scalar_type
   21       | /* empty */

   22 lit_dec: T_LITERAL pointer_lit

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN any_type T_R_PAREN T_NAME T_EQUALS

   24 any_type: type

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK scalar_type T_R_BRACK literals T_END

   26 literals: literals literal_item
   27         | literal_item

   28 literal_item: literal
   29             | literal T_L_PAREN const T_R_PAREN

   30 literal: const_expr

   31 const_expr: const
   32           | const const_op const_expr

   33 const_op: T_PLUS
   34         | T_MINUS
   35         | T_AMPERSAND
   36         | T_STAR
   37         | T_SLASH

   38 type_dec: T_TYPE T_NAME
   39         | T_TYPE T_NAME T_IS structure
   40         | T_TYPE T_NAME const
   41         | T_WITHIN T_NAME T_IS structure

   42 var_dec: type name_list

   43 import_dec: T_IMPORT kind imp_list

   44 kind: T_LITERAL
   45     | T_LITERAL numeric_type
   46     | T_VSTORE
   47     | T_VSTORE numeric_type
   48     | T_TYPE
   49     | T_LABEL

   50 imp_list: imp_list T_COMMA imp_list_item
   51         | imp_list_item

   52 imp_list_item: T_NAME
   53              | T_NAME T_L_PAREN T_R_PAREN

   54 structure: fields
   55          | fields T_OR structure

   56 fields: fields type name_list
   57       | type name_list

   58 type: scalar_type
   59     | scalar_type T_L_PAREN const T_R_PAREN

   60 name_list: name_list T_COMMA T_NAME
   61          | T_NAME

   62 scalar_type: numeric_type
   63            | T_NAME
   64            | T_ADDR T_L_PAREN numeric_type T_R_PAREN
   65            | T_ADDR T_L_PAREN T_NAME T_R_PAREN
   66            | T_ADDR T_L_PAREN T_ADDR T_R_PAREN
   67            | T_ADDR

   68 const: dec_integer
   69      | char_const
   70      | T_MULTI_CHAR_CONST
   71      | T_CH_STRING

   72 dec_integer: T_NUMBER
   73            | T_PLUS T_NUMBER
   74            | T_MINUS T_NUMBER

   75 char_const: T_CHAR_CONST

   76 numeric_type: T_INTEGER size
   77             | T_REAL size
   78             | T_LOGICAL size

   79 size: T_NUMBER
   80     | /* empty */

   81 statements: statements statement
   82           | statement

   83 statement: declarative_statement
   84          | imperative_statement
   85          | proc_defn

   86 declarative_statement: label_dec
   87                      | var_dec
   88                      | proc_dec
   89                      | lit_dec
   90                      | data_vec
   91                      | type_dec
   92                      | import_dec

   93 imperative_statement: comp_st
   94                     | control_st

   95 proc_defn: proc_heading statements T_END

   96 proc_heading: T_PROC T_NAME
   97             | T_PROC T_NAME T_L_BRACK T_R_BRACK
   98             | T_PROC T_NAME T_L_BRACK name_list T_R_BRACK

   99 label_dec: T_NAME T_COLON

  100 comp_st: computation
  101        | if_st
  102        | while_st
  103        | for_st

  104 control_st: go_st

  105 computation: opr_opd_seq

  106 opr_opd_seq: operand
  107            | operand operator opr_opd_seq

  108 operator: T_PLUS
  109         | T_MINUS
  110         | T_STAR
  111         | T_SLASH
  112         | T_AMPERSAND
  113         | T_EXCLAMATION
  114         | T_XOR
  115         | T_RSUB
  116         | T_RDIV
  117         | T_ADDSTORE
  118         | T_MULSTORE
  119         | T_DIVSTORE
  120         | T_ANDSTORE
  121         | T_ORSTORE
  122         | T_XORSTORE
  123         | T_ASSIGN
  124         | T_RSUBSTORE
  125         | T_RDIVSTORE
  126         | T_LLSHIFT
  127         | T_RLSHIFT

  128 operand: variable
  129        | T_CIRCUMFLEX variable
  130        | variable T_OF context
  131        | T_CIRCUMFLEX variable T_OF context
  132        | const
  133        | T_NAME T_L_BRACK p_list T_R_BRACK
  134        | T_NAME T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK
  135        | T_L_BRACK computation T_R_BRACK
  136        | built_in_function

  137 context: variable
  138        | variable T_OF context

  139 condition: test
  140          | test logop condition

  141 test: T_L_PAREN condition T_R_PAREN
  142     | comparison

  143 logop: T_OR
  144      | T_AND

  145 comparison: computation compare_list

  146 compare_list: comparator computation compare_list
  147             | comparator computation

  148 comparator: T_EQUALS
  149           | T_NOT_EQUALS
  150           | T_LT
  151           | T_GT
  152           | T_LE
  153           | T_GE

  154 p_list: p_list T_COMMA computation
  155       | computation
  156       | /* empty */

  157 built_in_function: T_NAME T_L_BRACK name_list T_R_BRACK

  158 variable: T_NAME
  159         | T_NAME subscript
  160         | T_NAME T_CIRCUMFLEX subscript
  161         | T_NAME subscript T_CIRCUMFLEX subscript

  162 subscript: T_L_PAREN computation T_R_PAREN

  163 if_st: T_IF condition action

  164 while_st: T_WHILE condition T_DO statements T_OD

  165 for_st: T_FOR computation T_DO statements T_OD
  166       | T_FOR T_NAME T_LT computation T_DO statements T_OD

  167 go_st: T_GOTO T_NAME

  168 action: T_COMMA go_st
  169       | T_THEN statements else_cl T_FI

  170 else_cl: T_ELSE statements
  171        | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ADDR (258) 23 64 65 66 67
T_AND (259) 144
T_DATAVEC (260) 25
T_DO (261) 164 165 166
T_ELSE (262) 170
T_MODULEEND (263) 1
T_END (264) 25 95
T_FI (265) 169
T_FOR (266) 165 166
T_IMPORT (267) 43
T_INTEGER (268) 76
T_IF (269) 163
T_IS (270) 39 41
T_LABEL (271) 49
T_LITERAL (272) 22 44 45
T_LOGICAL (273) 78
T_LSPEC (274) 15
T_MODULE (275) 2 3
T_OD (276) 164 165 166
T_OF (277) 130 131 138
T_OR (278) 55 143
T_PROC (279) 96 97 98
T_PSPEC (280) 16
T_REAL (281) 77
T_THEN (282) 169
T_TYPE (283) 38 39 40 48
T_VSTORE (284) 46 47
T_WHILE (285) 164
T_WITHIN (286) 41
T_EQUALS (287) 14 23 148
T_NOT_EQUALS (288) 149
T_LT (289) 150 166
T_GT (290) 151
T_LE (291) 152
T_GE (292) 153
T_COMMA (293) 19 50 60 154 168
T_COLON (294) 99
T_CIRCUMFLEX (295) 129 131 134 160 161
T_L_BRACK (296) 10 17 18 25 97 98 133 134 135 157
T_R_BRACK (297) 10 17 18 25 97 98 133 134 135 157
T_L_PAREN (298) 23 29 53 59 64 65 66 141 162
T_R_PAREN (299) 23 29 53 59 64 65 66 141 162
T_PLUS (300) 33 73 108
T_MINUS (301) 34 74 109
T_STAR (302) 36 110
T_SLASH (303) 18 23 37 111
T_AMPERSAND (304) 35 112
T_EXCLAMATION (305) 113
T_XOR (306) 114
T_RSUB (307) 115
T_RDIV (308) 116
T_ADDSTORE (309) 117
T_MULSTORE (310) 118
T_DIVSTORE (311) 119
T_ANDSTORE (312) 120
T_ORSTORE (313) 121
T_XORSTORE (314) 122
T_ASSIGN (315) 123
T_RSUBSTORE (316) 124
T_RDIVSTORE (317) 125
T_LLSHIFT (318) 126
T_RLSHIFT (319) 127
T_GOTO (320) 167
T_NAME (321) 3 12 13 14 23 25 38 39 40 41 52 53 60 61 63 65 96 97 98
    99 133 134 157 158 159 160 161 166 167
T_CHAR_CONST (322) 75
T_MULTI_CHAR_CONST (323) 70
T_CH_STRING (324) 71
T_NUMBER (325) 72 73 74 79


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
module (72)
    on left: 1, on right: 0
start_module (73)
    on left: 2 3, on right: 1
imports (74)
    on left: 4 5, on right: 1 4
import (75)
    on left: 6 7 8 9, on right: 4
exports (76)
    on left: 10 11, on right: 1
proc_dec (77)
    on left: 12 13 14, on right: 6 88
proc_dec_spec (78)
    on left: 15 16, on right: 12 13 14
pspec (79)
    on left: 17 18, on right: 13
t_list (80)
    on left: 19 20 21, on right: 17 18 19
lit_dec (81)
    on left: 22, on right: 89
pointer_lit (82)
    on left: 23, on right: 22
any_type (83)
    on left: 24, on right: 23
data_vec (84)
    on left: 25, on right: 90
literals (85)
    on left: 26 27, on right: 25 26
literal_item (86)
    on left: 28 29, on right: 26 27
literal (87)
    on left: 30, on right: 28 29
const_expr (88)
    on left: 31 32, on right: 30 32
const_op (89)
    on left: 33 34 35 36 37, on right: 32
type_dec (90)
    on left: 38 39 40 41, on right: 7 91
var_dec (91)
    on left: 42, on right: 8 87
import_dec (92)
    on left: 43, on right: 9 92
kind (93)
    on left: 44 45 46 47 48 49, on right: 43
imp_list (94)
    on left: 50 51, on right: 43 50
imp_list_item (95)
    on left: 52 53, on right: 50 51
structure (96)
    on left: 54 55, on right: 39 41 55
fields (97)
    on left: 56 57, on right: 54 55 56
type (98)
    on left: 58 59, on right: 24 42 56 57
name_list (99)
    on left: 60 61, on right: 10 42 56 57 60 98 157
scalar_type (100)
    on left: 62 63 64 65 66 67, on right: 18 19 20 25 58 59
const (101)
    on left: 68 69 70 71, on right: 29 31 32 40 59 132
dec_integer (102)
    on left: 72 73 74, on right: 68
char_const (103)
    on left: 75, on right: 69
numeric_type (104)
    on left: 76 77 78, on right: 45 47 62 64
size (105)
    on left: 79 80, on right: 76 77 78
statements (106)
    on left: 81 82, on right: 1 81 95 164 165 166 169 170
statement (107)
    on left: 83 84 85, on right: 81 82
declarative_statement (108)
    on left: 86 87 88 89 90 91 92, on right: 83
imperative_statement (109)
    on left: 93 94, on right: 84
proc_defn (110)
    on left: 95, on right: 85
proc_heading (111)
    on left: 96 97 98, on right: 95
label_dec (112)
    on left: 99, on right: 86
comp_st (113)
    on left: 100 101 102 103, on right: 93
control_st (114)
    on left: 104, on right: 94
computation (115)
    on left: 105, on right: 100 135 145 146 147 154 155 162 165 166
opr_opd_seq (116)
    on left: 106 107, on right: 105 107
operator (117)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124 125 126 127, on right: 107
operand (118)
    on left: 128 129 130 131 132 133 134 135 136, on right: 106 107
context (119)
    on left: 137 138, on right: 130 131 138
condition (120)
    on left: 139 140, on right: 140 141 163 164
test (121)
    on left: 141 142, on right: 139 140
logop (122)
    on left: 143 144, on right: 140
comparison (123)
    on left: 145, on right: 142
compare_list (124)
    on left: 146 147, on right: 145 146
comparator (125)
    on left: 148 149 150 151 152 153, on right: 146 147
p_list (126)
    on left: 154 155 156, on right: 133 134 154
built_in_function (127)
    on left: 157, on right: 136
variable (128)
    on left: 158 159 160 161, on right: 128 129 130 131 137 138
subscript (129)
    on left: 162, on right: 159 160 161
if_st (130)
    on left: 163, on right: 101
while_st (131)
    on left: 164, on right: 102
for_st (132)
    on left: 165 166, on right: 103
go_st (133)
    on left: 167, on right: 104 168
action (134)
    on left: 168 169, on right: 163
else_cl (135)
    on left: 170 171, on right: 169


State 0

    0 $accept: . module $end

    $default  reduce using rule 5 (imports)

    module   go to state 1
    imports  go to state 2


State 1

    0 $accept: module . $end

    $end  shift, and go to state 3


State 2

    1 module: imports . start_module exports statements T_MODULEEND
    4 imports: imports . import

    T_ADDR     shift, and go to state 4
    T_IMPORT   shift, and go to state 5
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_LSPEC    shift, and go to state 8
    T_MODULE   shift, and go to state 9
    T_PSPEC    shift, and go to state 10
    T_REAL     shift, and go to state 11
    T_TYPE     shift, and go to state 12
    T_WITHIN   shift, and go to state 13
    T_NAME     shift, and go to state 14

    start_module   go to state 15
    import         go to state 16
    proc_dec       go to state 17
    proc_dec_spec  go to state 18
    type_dec       go to state 19
    var_dec        go to state 20
    import_dec     go to state 21
    type           go to state 22
    scalar_type    go to state 23
    numeric_type   go to state 24


State 3

    0 $accept: module $end .

    $default  accept


State 4

   64 scalar_type: T_ADDR . T_L_PAREN numeric_type T_R_PAREN
   65            | T_ADDR . T_L_PAREN T_NAME T_R_PAREN
   66            | T_ADDR . T_L_PAREN T_ADDR T_R_PAREN
   67            | T_ADDR .

    T_L_PAREN  shift, and go to state 25

    T_L_PAREN  [reduce using rule 67 (scalar_type)]
    $default   reduce using rule 67 (scalar_type)


State 5

   43 import_dec: T_IMPORT . kind imp_list

    T_LABEL    shift, and go to state 26
    T_LITERAL  shift, and go to state 27
    T_TYPE     shift, and go to state 28
    T_VSTORE   shift, and go to state 29

    kind  go to state 30


State 6

   76 numeric_type: T_INTEGER . size

    T_NUMBER  shift, and go to state 31

    T_NUMBER  [reduce using rule 80 (size)]
    $default  reduce using rule 80 (size)

    size  go to state 32


State 7

   78 numeric_type: T_LOGICAL . size

    T_NUMBER  shift, and go to state 31

    T_NUMBER  [reduce using rule 80 (size)]
    $default  reduce using rule 80 (size)

    size  go to state 33


State 8

   15 proc_dec_spec: T_LSPEC .

    $default  reduce using rule 15 (proc_dec_spec)


State 9

    2 start_module: T_MODULE .
    3             | T_MODULE . T_NAME

    T_NAME  shift, and go to state 34

    T_NAME    [reduce using rule 2 (start_module)]
    $default  reduce using rule 2 (start_module)


State 10

   16 proc_dec_spec: T_PSPEC .

    $default  reduce using rule 16 (proc_dec_spec)


State 11

   77 numeric_type: T_REAL . size

    T_NUMBER  shift, and go to state 31

    T_NUMBER  [reduce using rule 80 (size)]
    $default  reduce using rule 80 (size)

    size  go to state 35


State 12

   38 type_dec: T_TYPE . T_NAME
   39         | T_TYPE . T_NAME T_IS structure
   40         | T_TYPE . T_NAME const

    T_NAME  shift, and go to state 36


State 13

   41 type_dec: T_WITHIN . T_NAME T_IS structure

    T_NAME  shift, and go to state 37


State 14

   63 scalar_type: T_NAME .

    $default  reduce using rule 63 (scalar_type)


State 15

    1 module: imports start_module . exports statements T_MODULEEND

    T_L_BRACK  shift, and go to state 38

    T_L_BRACK  [reduce using rule 11 (exports)]
    $default   reduce using rule 11 (exports)

    exports  go to state 39


State 16

    4 imports: imports import .

    $default  reduce using rule 4 (imports)


State 17

    6 import: proc_dec .

    $default  reduce using rule 6 (import)


State 18

   12 proc_dec: proc_dec_spec . T_NAME
   13         | proc_dec_spec . T_NAME pspec
   14         | proc_dec_spec . T_NAME T_EQUALS T_NAME

    T_NAME  shift, and go to state 40


State 19

    7 import: type_dec .

    $default  reduce using rule 7 (import)


State 20

    8 import: var_dec .

    $default  reduce using rule 8 (import)


State 21

    9 import: import_dec .

    $default  reduce using rule 9 (import)


State 22

   42 var_dec: type . name_list

    T_NAME  shift, and go to state 41

    name_list  go to state 42


State 23

   58 type: scalar_type .
   59     | scalar_type . T_L_PAREN const T_R_PAREN

    T_L_PAREN  shift, and go to state 43

    $default  reduce using rule 58 (type)


State 24

   62 scalar_type: numeric_type .

    $default  reduce using rule 62 (scalar_type)


State 25

   64 scalar_type: T_ADDR T_L_PAREN . numeric_type T_R_PAREN
   65            | T_ADDR T_L_PAREN . T_NAME T_R_PAREN
   66            | T_ADDR T_L_PAREN . T_ADDR T_R_PAREN

    T_ADDR     shift, and go to state 44
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 45

    numeric_type  go to state 46


State 26

   49 kind: T_LABEL .

    $default  reduce using rule 49 (kind)


State 27

   44 kind: T_LITERAL .
   45     | T_LITERAL . numeric_type

    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11

    $default  reduce using rule 44 (kind)

    numeric_type  go to state 47


State 28

   48 kind: T_TYPE .

    $default  reduce using rule 48 (kind)


State 29

   46 kind: T_VSTORE .
   47     | T_VSTORE . numeric_type

    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11

    $default  reduce using rule 46 (kind)

    numeric_type  go to state 48


State 30

   43 import_dec: T_IMPORT kind . imp_list

    T_NAME  shift, and go to state 49

    imp_list       go to state 50
    imp_list_item  go to state 51


State 31

   79 size: T_NUMBER .

    $default  reduce using rule 79 (size)


State 32

   76 numeric_type: T_INTEGER size .

    $default  reduce using rule 76 (numeric_type)


State 33

   78 numeric_type: T_LOGICAL size .

    $default  reduce using rule 78 (numeric_type)


State 34

    3 start_module: T_MODULE T_NAME .

    $default  reduce using rule 3 (start_module)


State 35

   77 numeric_type: T_REAL size .

    $default  reduce using rule 77 (numeric_type)


State 36

   38 type_dec: T_TYPE T_NAME .
   39         | T_TYPE T_NAME . T_IS structure
   40         | T_TYPE T_NAME . const

    T_IS                shift, and go to state 52
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    T_PLUS              [reduce using rule 38 (type_dec)]
    T_MINUS             [reduce using rule 38 (type_dec)]
    T_CHAR_CONST        [reduce using rule 38 (type_dec)]
    T_MULTI_CHAR_CONST  [reduce using rule 38 (type_dec)]
    T_CH_STRING         [reduce using rule 38 (type_dec)]
    T_NUMBER            [reduce using rule 38 (type_dec)]
    $default            reduce using rule 38 (type_dec)

    const        go to state 59
    dec_integer  go to state 60
    char_const   go to state 61


State 37

   41 type_dec: T_WITHIN T_NAME . T_IS structure

    T_IS  shift, and go to state 62


State 38

   10 exports: T_L_BRACK . name_list T_R_BRACK

    T_NAME  shift, and go to state 41

    name_list  go to state 63


State 39

    1 module: imports start_module exports . statements T_MODULEEND

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 81
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 40

   12 proc_dec: proc_dec_spec T_NAME .
   13         | proc_dec_spec T_NAME . pspec
   14         | proc_dec_spec T_NAME . T_EQUALS T_NAME

    T_EQUALS   shift, and go to state 99
    T_L_BRACK  shift, and go to state 100

    T_L_BRACK  [reduce using rule 12 (proc_dec)]
    $default   reduce using rule 12 (proc_dec)

    pspec  go to state 101


State 41

   61 name_list: T_NAME .

    $default  reduce using rule 61 (name_list)


State 42

   42 var_dec: type name_list .
   60 name_list: name_list . T_COMMA T_NAME

    T_COMMA  shift, and go to state 102

    $default  reduce using rule 42 (var_dec)


State 43

   59 type: scalar_type T_L_PAREN . const T_R_PAREN

    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const        go to state 103
    dec_integer  go to state 60
    char_const   go to state 61


State 44

   66 scalar_type: T_ADDR T_L_PAREN T_ADDR . T_R_PAREN

    T_R_PAREN  shift, and go to state 104


State 45

   65 scalar_type: T_ADDR T_L_PAREN T_NAME . T_R_PAREN

    T_R_PAREN  shift, and go to state 105


State 46

   64 scalar_type: T_ADDR T_L_PAREN numeric_type . T_R_PAREN

    T_R_PAREN  shift, and go to state 106


State 47

   45 kind: T_LITERAL numeric_type .

    $default  reduce using rule 45 (kind)


State 48

   47 kind: T_VSTORE numeric_type .

    $default  reduce using rule 47 (kind)


State 49

   52 imp_list_item: T_NAME .
   53              | T_NAME . T_L_PAREN T_R_PAREN

    T_L_PAREN  shift, and go to state 107

    $default  reduce using rule 52 (imp_list_item)


State 50

   43 import_dec: T_IMPORT kind imp_list .
   50 imp_list: imp_list . T_COMMA imp_list_item

    T_COMMA  shift, and go to state 108

    $default  reduce using rule 43 (import_dec)


State 51

   51 imp_list: imp_list_item .

    $default  reduce using rule 51 (imp_list)


State 52

   39 type_dec: T_TYPE T_NAME T_IS . structure

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    structure     go to state 109
    fields        go to state 110
    type          go to state 111
    scalar_type   go to state 23
    numeric_type  go to state 24


State 53

   73 dec_integer: T_PLUS . T_NUMBER

    T_NUMBER  shift, and go to state 112


State 54

   74 dec_integer: T_MINUS . T_NUMBER

    T_NUMBER  shift, and go to state 113


State 55

   75 char_const: T_CHAR_CONST .

    $default  reduce using rule 75 (char_const)


State 56

   70 const: T_MULTI_CHAR_CONST .

    $default  reduce using rule 70 (const)


State 57

   71 const: T_CH_STRING .

    $default  reduce using rule 71 (const)


State 58

   72 dec_integer: T_NUMBER .

    $default  reduce using rule 72 (dec_integer)


State 59

   40 type_dec: T_TYPE T_NAME const .

    $default  reduce using rule 40 (type_dec)


State 60

   68 const: dec_integer .

    $default  reduce using rule 68 (const)


State 61

   69 const: char_const .

    $default  reduce using rule 69 (const)


State 62

   41 type_dec: T_WITHIN T_NAME T_IS . structure

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    structure     go to state 114
    fields        go to state 110
    type          go to state 111
    scalar_type   go to state 23
    numeric_type  go to state 24


State 63

   10 exports: T_L_BRACK name_list . T_R_BRACK
   60 name_list: name_list . T_COMMA T_NAME

    T_COMMA    shift, and go to state 102
    T_R_BRACK  shift, and go to state 115


State 64

   25 data_vec: T_DATAVEC . T_NAME T_L_BRACK scalar_type T_R_BRACK literals T_END

    T_NAME  shift, and go to state 116


State 65

  165 for_st: T_FOR . computation T_DO statements T_OD
  166       | T_FOR . T_NAME T_LT computation T_DO statements T_OD

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 117
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 118
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 66

  163 if_st: T_IF . condition action

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_L_PAREN           shift, and go to state 119
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 121
    opr_opd_seq        go to state 91
    operand            go to state 92
    condition          go to state 122
    test               go to state 123
    comparison         go to state 124
    built_in_function  go to state 93
    variable           go to state 94


State 67

   22 lit_dec: T_LITERAL . pointer_lit

    T_SLASH  shift, and go to state 125

    pointer_lit  go to state 126


State 68

   96 proc_heading: T_PROC . T_NAME
   97             | T_PROC . T_NAME T_L_BRACK T_R_BRACK
   98             | T_PROC . T_NAME T_L_BRACK name_list T_R_BRACK

    T_NAME  shift, and go to state 127


State 69

  164 while_st: T_WHILE . condition T_DO statements T_OD

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_L_PAREN           shift, and go to state 119
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 121
    opr_opd_seq        go to state 91
    operand            go to state 92
    condition          go to state 128
    test               go to state 123
    comparison         go to state 124
    built_in_function  go to state 93
    variable           go to state 94


State 70

  129 operand: T_CIRCUMFLEX . variable
  131        | T_CIRCUMFLEX . variable T_OF context

    T_NAME  shift, and go to state 129

    variable  go to state 130


State 71

  135 operand: T_L_BRACK . computation T_R_BRACK

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 131
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 72

  167 go_st: T_GOTO . T_NAME

    T_NAME  shift, and go to state 132


State 73

   63 scalar_type: T_NAME .
   99 label_dec: T_NAME . T_COLON
  133 operand: T_NAME . T_L_BRACK p_list T_R_BRACK
  134        | T_NAME . T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK
  157 built_in_function: T_NAME . T_L_BRACK name_list T_R_BRACK
  158 variable: T_NAME .
  159         | T_NAME . subscript
  160         | T_NAME . T_CIRCUMFLEX subscript
  161         | T_NAME . subscript T_CIRCUMFLEX subscript

    T_COLON       shift, and go to state 133
    T_CIRCUMFLEX  shift, and go to state 134
    T_L_BRACK     shift, and go to state 135
    T_L_PAREN     shift, and go to state 136

    T_CIRCUMFLEX  [reduce using rule 158 (variable)]
    T_L_BRACK     [reduce using rule 158 (variable)]
    T_L_PAREN     [reduce using rule 63 (scalar_type)]
    T_NAME        reduce using rule 63 (scalar_type)
    T_NAME        [reduce using rule 158 (variable)]
    $default      reduce using rule 158 (variable)

    subscript  go to state 137


State 74

   88 declarative_statement: proc_dec .

    $default  reduce using rule 88 (declarative_statement)


State 75

   89 declarative_statement: lit_dec .

    $default  reduce using rule 89 (declarative_statement)


State 76

   90 declarative_statement: data_vec .

    $default  reduce using rule 90 (declarative_statement)


State 77

   91 declarative_statement: type_dec .

    $default  reduce using rule 91 (declarative_statement)


State 78

   87 declarative_statement: var_dec .

    $default  reduce using rule 87 (declarative_statement)


State 79

   92 declarative_statement: import_dec .

    $default  reduce using rule 92 (declarative_statement)


State 80

  132 operand: const .

    $default  reduce using rule 132 (operand)


State 81

    1 module: imports start_module exports statements . T_MODULEEND
   81 statements: statements . statement

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_MODULEEND         shift, and go to state 138
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 82

   82 statements: statement .

    $default  reduce using rule 82 (statements)


State 83

   83 statement: declarative_statement .

    $default  reduce using rule 83 (statement)


State 84

   84 statement: imperative_statement .

    $default  reduce using rule 84 (statement)


State 85

   85 statement: proc_defn .

    $default  reduce using rule 85 (statement)


State 86

   95 proc_defn: proc_heading . statements T_END

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 140
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 87

   86 declarative_statement: label_dec .

    $default  reduce using rule 86 (declarative_statement)


State 88

   93 imperative_statement: comp_st .

    $default  reduce using rule 93 (imperative_statement)


State 89

   94 imperative_statement: control_st .

    $default  reduce using rule 94 (imperative_statement)


State 90

  100 comp_st: computation .

    $default  reduce using rule 100 (comp_st)


State 91

  105 computation: opr_opd_seq .

    $default  reduce using rule 105 (computation)


State 92

  106 opr_opd_seq: operand .
  107            | operand . operator opr_opd_seq

    T_PLUS         shift, and go to state 141
    T_MINUS        shift, and go to state 142
    T_STAR         shift, and go to state 143
    T_SLASH        shift, and go to state 144
    T_AMPERSAND    shift, and go to state 145
    T_EXCLAMATION  shift, and go to state 146
    T_XOR          shift, and go to state 147
    T_RSUB         shift, and go to state 148
    T_RDIV         shift, and go to state 149
    T_ADDSTORE     shift, and go to state 150
    T_MULSTORE     shift, and go to state 151
    T_DIVSTORE     shift, and go to state 152
    T_ANDSTORE     shift, and go to state 153
    T_ORSTORE      shift, and go to state 154
    T_XORSTORE     shift, and go to state 155
    T_ASSIGN       shift, and go to state 156
    T_RSUBSTORE    shift, and go to state 157
    T_RDIVSTORE    shift, and go to state 158
    T_LLSHIFT      shift, and go to state 159
    T_RLSHIFT      shift, and go to state 160

    T_PLUS    [reduce using rule 106 (opr_opd_seq)]
    T_MINUS   [reduce using rule 106 (opr_opd_seq)]
    $default  reduce using rule 106 (opr_opd_seq)

    operator  go to state 161


State 93

  136 operand: built_in_function .

    $default  reduce using rule 136 (operand)


State 94

  128 operand: variable .
  130        | variable . T_OF context

    T_OF  shift, and go to state 162

    $default  reduce using rule 128 (operand)


State 95

  101 comp_st: if_st .

    $default  reduce using rule 101 (comp_st)


State 96

  102 comp_st: while_st .

    $default  reduce using rule 102 (comp_st)


State 97

  103 comp_st: for_st .

    $default  reduce using rule 103 (comp_st)


State 98

  104 control_st: go_st .

    $default  reduce using rule 104 (control_st)


State 99

   14 proc_dec: proc_dec_spec T_NAME T_EQUALS . T_NAME

    T_NAME  shift, and go to state 163


State 100

   17 pspec: T_L_BRACK . t_list T_R_BRACK
   18      | T_L_BRACK . t_list T_R_BRACK T_SLASH scalar_type

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    $default  reduce using rule 21 (t_list)

    t_list        go to state 164
    scalar_type   go to state 165
    numeric_type  go to state 24


State 101

   13 proc_dec: proc_dec_spec T_NAME pspec .

    $default  reduce using rule 13 (proc_dec)


State 102

   60 name_list: name_list T_COMMA . T_NAME

    T_NAME  shift, and go to state 166


State 103

   59 type: scalar_type T_L_PAREN const . T_R_PAREN

    T_R_PAREN  shift, and go to state 167


State 104

   66 scalar_type: T_ADDR T_L_PAREN T_ADDR T_R_PAREN .

    $default  reduce using rule 66 (scalar_type)


State 105

   65 scalar_type: T_ADDR T_L_PAREN T_NAME T_R_PAREN .

    $default  reduce using rule 65 (scalar_type)


State 106

   64 scalar_type: T_ADDR T_L_PAREN numeric_type T_R_PAREN .

    $default  reduce using rule 64 (scalar_type)


State 107

   53 imp_list_item: T_NAME T_L_PAREN . T_R_PAREN

    T_R_PAREN  shift, and go to state 168


State 108

   50 imp_list: imp_list T_COMMA . imp_list_item

    T_NAME  shift, and go to state 49

    imp_list_item  go to state 169


State 109

   39 type_dec: T_TYPE T_NAME T_IS structure .

    $default  reduce using rule 39 (type_dec)


State 110

   54 structure: fields .
   55          | fields . T_OR structure
   56 fields: fields . type name_list

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_OR       shift, and go to state 170
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    T_ADDR     [reduce using rule 54 (structure)]
    T_INTEGER  [reduce using rule 54 (structure)]
    T_LOGICAL  [reduce using rule 54 (structure)]
    T_REAL     [reduce using rule 54 (structure)]
    T_NAME     [reduce using rule 54 (structure)]
    $default   reduce using rule 54 (structure)

    type          go to state 171
    scalar_type   go to state 23
    numeric_type  go to state 24


State 111

   57 fields: type . name_list

    T_NAME  shift, and go to state 41

    name_list  go to state 172


State 112

   73 dec_integer: T_PLUS T_NUMBER .

    $default  reduce using rule 73 (dec_integer)


State 113

   74 dec_integer: T_MINUS T_NUMBER .

    $default  reduce using rule 74 (dec_integer)


State 114

   41 type_dec: T_WITHIN T_NAME T_IS structure .

    $default  reduce using rule 41 (type_dec)


State 115

   10 exports: T_L_BRACK name_list T_R_BRACK .

    $default  reduce using rule 10 (exports)


State 116

   25 data_vec: T_DATAVEC T_NAME . T_L_BRACK scalar_type T_R_BRACK literals T_END

    T_L_BRACK  shift, and go to state 173


State 117

  133 operand: T_NAME . T_L_BRACK p_list T_R_BRACK
  134        | T_NAME . T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK
  157 built_in_function: T_NAME . T_L_BRACK name_list T_R_BRACK
  158 variable: T_NAME .
  159         | T_NAME . subscript
  160         | T_NAME . T_CIRCUMFLEX subscript
  161         | T_NAME . subscript T_CIRCUMFLEX subscript
  166 for_st: T_FOR T_NAME . T_LT computation T_DO statements T_OD

    T_LT          shift, and go to state 174
    T_CIRCUMFLEX  shift, and go to state 134
    T_L_BRACK     shift, and go to state 135
    T_L_PAREN     shift, and go to state 136

    $default  reduce using rule 158 (variable)

    subscript  go to state 137


State 118

  165 for_st: T_FOR computation . T_DO statements T_OD

    T_DO  shift, and go to state 175


State 119

  141 test: T_L_PAREN . condition T_R_PAREN

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_L_PAREN           shift, and go to state 119
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 121
    opr_opd_seq        go to state 91
    operand            go to state 92
    condition          go to state 176
    test               go to state 123
    comparison         go to state 124
    built_in_function  go to state 93
    variable           go to state 94


State 120

  133 operand: T_NAME . T_L_BRACK p_list T_R_BRACK
  134        | T_NAME . T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK
  157 built_in_function: T_NAME . T_L_BRACK name_list T_R_BRACK
  158 variable: T_NAME .
  159         | T_NAME . subscript
  160         | T_NAME . T_CIRCUMFLEX subscript
  161         | T_NAME . subscript T_CIRCUMFLEX subscript

    T_CIRCUMFLEX  shift, and go to state 134
    T_L_BRACK     shift, and go to state 135
    T_L_PAREN     shift, and go to state 136

    T_CIRCUMFLEX  [reduce using rule 158 (variable)]
    T_L_BRACK     [reduce using rule 158 (variable)]
    $default      reduce using rule 158 (variable)

    subscript  go to state 137


State 121

  145 comparison: computation . compare_list

    T_EQUALS      shift, and go to state 177
    T_NOT_EQUALS  shift, and go to state 178
    T_LT          shift, and go to state 179
    T_GT          shift, and go to state 180
    T_LE          shift, and go to state 181
    T_GE          shift, and go to state 182

    compare_list  go to state 183
    comparator    go to state 184


State 122

  163 if_st: T_IF condition . action

    T_THEN   shift, and go to state 185
    T_COMMA  shift, and go to state 186

    action  go to state 187


State 123

  139 condition: test .
  140          | test . logop condition

    T_AND  shift, and go to state 188
    T_OR   shift, and go to state 189

    $default  reduce using rule 139 (condition)

    logop  go to state 190


State 124

  142 test: comparison .

    $default  reduce using rule 142 (test)


State 125

   23 pointer_lit: T_SLASH . T_ADDR T_L_PAREN any_type T_R_PAREN T_NAME T_EQUALS

    T_ADDR  shift, and go to state 191


State 126

   22 lit_dec: T_LITERAL pointer_lit .

    $default  reduce using rule 22 (lit_dec)


State 127

   96 proc_heading: T_PROC T_NAME .
   97             | T_PROC T_NAME . T_L_BRACK T_R_BRACK
   98             | T_PROC T_NAME . T_L_BRACK name_list T_R_BRACK

    T_L_BRACK  shift, and go to state 192

    T_L_BRACK  [reduce using rule 96 (proc_heading)]
    $default   reduce using rule 96 (proc_heading)


State 128

  164 while_st: T_WHILE condition . T_DO statements T_OD

    T_DO  shift, and go to state 193


State 129

  158 variable: T_NAME .
  159         | T_NAME . subscript
  160         | T_NAME . T_CIRCUMFLEX subscript
  161         | T_NAME . subscript T_CIRCUMFLEX subscript

    T_CIRCUMFLEX  shift, and go to state 194
    T_L_PAREN     shift, and go to state 136

    T_CIRCUMFLEX  [reduce using rule 158 (variable)]
    $default      reduce using rule 158 (variable)

    subscript  go to state 137


State 130

  129 operand: T_CIRCUMFLEX variable .
  131        | T_CIRCUMFLEX variable . T_OF context

    T_OF  shift, and go to state 195

    $default  reduce using rule 129 (operand)


State 131

  135 operand: T_L_BRACK computation . T_R_BRACK

    T_R_BRACK  shift, and go to state 196


State 132

  167 go_st: T_GOTO T_NAME .

    $default  reduce using rule 167 (go_st)


State 133

   99 label_dec: T_NAME T_COLON .

    $default  reduce using rule 99 (label_dec)


State 134

  134 operand: T_NAME T_CIRCUMFLEX . T_L_BRACK p_list T_R_BRACK
  160 variable: T_NAME T_CIRCUMFLEX . subscript

    T_L_BRACK  shift, and go to state 197
    T_L_PAREN  shift, and go to state 136

    subscript  go to state 198


State 135

  133 operand: T_NAME T_L_BRACK . p_list T_R_BRACK
  157 built_in_function: T_NAME T_L_BRACK . name_list T_R_BRACK

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 199
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    $default  reduce using rule 156 (p_list)

    name_list          go to state 200
    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 201
    opr_opd_seq        go to state 91
    operand            go to state 92
    p_list             go to state 202
    built_in_function  go to state 93
    variable           go to state 94


State 136

  162 subscript: T_L_PAREN . computation T_R_PAREN

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 203
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 137

  159 variable: T_NAME subscript .
  161         | T_NAME subscript . T_CIRCUMFLEX subscript

    T_CIRCUMFLEX  shift, and go to state 204

    T_CIRCUMFLEX  [reduce using rule 159 (variable)]
    $default      reduce using rule 159 (variable)


State 138

    1 module: imports start_module exports statements T_MODULEEND .

    $default  reduce using rule 1 (module)


State 139

   81 statements: statements statement .

    $default  reduce using rule 81 (statements)


State 140

   81 statements: statements . statement
   95 proc_defn: proc_heading statements . T_END

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_END               shift, and go to state 205
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 141

  108 operator: T_PLUS .

    $default  reduce using rule 108 (operator)


State 142

  109 operator: T_MINUS .

    $default  reduce using rule 109 (operator)


State 143

  110 operator: T_STAR .

    $default  reduce using rule 110 (operator)


State 144

  111 operator: T_SLASH .

    $default  reduce using rule 111 (operator)


State 145

  112 operator: T_AMPERSAND .

    $default  reduce using rule 112 (operator)


State 146

  113 operator: T_EXCLAMATION .

    $default  reduce using rule 113 (operator)


State 147

  114 operator: T_XOR .

    $default  reduce using rule 114 (operator)


State 148

  115 operator: T_RSUB .

    $default  reduce using rule 115 (operator)


State 149

  116 operator: T_RDIV .

    $default  reduce using rule 116 (operator)


State 150

  117 operator: T_ADDSTORE .

    $default  reduce using rule 117 (operator)


State 151

  118 operator: T_MULSTORE .

    $default  reduce using rule 118 (operator)


State 152

  119 operator: T_DIVSTORE .

    $default  reduce using rule 119 (operator)


State 153

  120 operator: T_ANDSTORE .

    $default  reduce using rule 120 (operator)


State 154

  121 operator: T_ORSTORE .

    $default  reduce using rule 121 (operator)


State 155

  122 operator: T_XORSTORE .

    $default  reduce using rule 122 (operator)


State 156

  123 operator: T_ASSIGN .

    $default  reduce using rule 123 (operator)


State 157

  124 operator: T_RSUBSTORE .

    $default  reduce using rule 124 (operator)


State 158

  125 operator: T_RDIVSTORE .

    $default  reduce using rule 125 (operator)


State 159

  126 operator: T_LLSHIFT .

    $default  reduce using rule 126 (operator)


State 160

  127 operator: T_RLSHIFT .

    $default  reduce using rule 127 (operator)


State 161

  107 opr_opd_seq: operand operator . opr_opd_seq

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    opr_opd_seq        go to state 206
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 162

  130 operand: variable T_OF . context

    T_NAME  shift, and go to state 129

    context   go to state 207
    variable  go to state 208


State 163

   14 proc_dec: proc_dec_spec T_NAME T_EQUALS T_NAME .

    $default  reduce using rule 14 (proc_dec)


State 164

   17 pspec: T_L_BRACK t_list . T_R_BRACK
   18      | T_L_BRACK t_list . T_R_BRACK T_SLASH scalar_type
   19 t_list: t_list . T_COMMA scalar_type

    T_COMMA    shift, and go to state 209
    T_R_BRACK  shift, and go to state 210


State 165

   20 t_list: scalar_type .

    $default  reduce using rule 20 (t_list)


State 166

   60 name_list: name_list T_COMMA T_NAME .

    $default  reduce using rule 60 (name_list)


State 167

   59 type: scalar_type T_L_PAREN const T_R_PAREN .

    $default  reduce using rule 59 (type)


State 168

   53 imp_list_item: T_NAME T_L_PAREN T_R_PAREN .

    $default  reduce using rule 53 (imp_list_item)


State 169

   50 imp_list: imp_list T_COMMA imp_list_item .

    $default  reduce using rule 50 (imp_list)


State 170

   55 structure: fields T_OR . structure

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    structure     go to state 211
    fields        go to state 110
    type          go to state 111
    scalar_type   go to state 23
    numeric_type  go to state 24


State 171

   56 fields: fields type . name_list

    T_NAME  shift, and go to state 41

    name_list  go to state 212


State 172

   57 fields: type name_list .
   60 name_list: name_list . T_COMMA T_NAME

    T_COMMA  shift, and go to state 102

    $default  reduce using rule 57 (fields)


State 173

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK . scalar_type T_R_BRACK literals T_END

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    scalar_type   go to state 213
    numeric_type  go to state 24


State 174

  166 for_st: T_FOR T_NAME T_LT . computation T_DO statements T_OD

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 214
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 175

  165 for_st: T_FOR computation T_DO . statements T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 215
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 176

  141 test: T_L_PAREN condition . T_R_PAREN

    T_R_PAREN  shift, and go to state 216


State 177

  148 comparator: T_EQUALS .

    $default  reduce using rule 148 (comparator)


State 178

  149 comparator: T_NOT_EQUALS .

    $default  reduce using rule 149 (comparator)


State 179

  150 comparator: T_LT .

    $default  reduce using rule 150 (comparator)


State 180

  151 comparator: T_GT .

    $default  reduce using rule 151 (comparator)


State 181

  152 comparator: T_LE .

    $default  reduce using rule 152 (comparator)


State 182

  153 comparator: T_GE .

    $default  reduce using rule 153 (comparator)


State 183

  145 comparison: computation compare_list .

    $default  reduce using rule 145 (comparison)


State 184

  146 compare_list: comparator . computation compare_list
  147             | comparator . computation

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 217
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 185

  169 action: T_THEN . statements else_cl T_FI

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 218
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 186

  168 action: T_COMMA . go_st

    T_GOTO  shift, and go to state 72

    go_st  go to state 219


State 187

  163 if_st: T_IF condition action .

    $default  reduce using rule 163 (if_st)


State 188

  144 logop: T_AND .

    $default  reduce using rule 144 (logop)


State 189

  143 logop: T_OR .

    $default  reduce using rule 143 (logop)


State 190

  140 condition: test logop . condition

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_L_PAREN           shift, and go to state 119
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 121
    opr_opd_seq        go to state 91
    operand            go to state 92
    condition          go to state 220
    test               go to state 123
    comparison         go to state 124
    built_in_function  go to state 93
    variable           go to state 94


State 191

   23 pointer_lit: T_SLASH T_ADDR . T_L_PAREN any_type T_R_PAREN T_NAME T_EQUALS

    T_L_PAREN  shift, and go to state 221


State 192

   97 proc_heading: T_PROC T_NAME T_L_BRACK . T_R_BRACK
   98             | T_PROC T_NAME T_L_BRACK . name_list T_R_BRACK

    T_R_BRACK  shift, and go to state 222
    T_NAME     shift, and go to state 41

    name_list  go to state 223


State 193

  164 while_st: T_WHILE condition T_DO . statements T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 224
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 194

  160 variable: T_NAME T_CIRCUMFLEX . subscript

    T_L_PAREN  shift, and go to state 136

    subscript  go to state 198


State 195

  131 operand: T_CIRCUMFLEX variable T_OF . context

    T_NAME  shift, and go to state 129

    context   go to state 225
    variable  go to state 208


State 196

  135 operand: T_L_BRACK computation T_R_BRACK .

    $default  reduce using rule 135 (operand)


State 197

  134 operand: T_NAME T_CIRCUMFLEX T_L_BRACK . p_list T_R_BRACK

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    $default  reduce using rule 156 (p_list)

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 201
    opr_opd_seq        go to state 91
    operand            go to state 92
    p_list             go to state 226
    built_in_function  go to state 93
    variable           go to state 94


State 198

  160 variable: T_NAME T_CIRCUMFLEX subscript .

    $default  reduce using rule 160 (variable)


State 199

   61 name_list: T_NAME .
  133 operand: T_NAME . T_L_BRACK p_list T_R_BRACK
  134        | T_NAME . T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK
  157 built_in_function: T_NAME . T_L_BRACK name_list T_R_BRACK
  158 variable: T_NAME .
  159         | T_NAME . subscript
  160         | T_NAME . T_CIRCUMFLEX subscript
  161         | T_NAME . subscript T_CIRCUMFLEX subscript

    T_CIRCUMFLEX  shift, and go to state 134
    T_L_BRACK     shift, and go to state 135
    T_L_PAREN     shift, and go to state 136

    T_COMMA    reduce using rule 61 (name_list)
    T_COMMA    [reduce using rule 158 (variable)]
    T_R_BRACK  reduce using rule 61 (name_list)
    T_R_BRACK  [reduce using rule 158 (variable)]
    $default   reduce using rule 158 (variable)

    subscript  go to state 137


State 200

   60 name_list: name_list . T_COMMA T_NAME
  157 built_in_function: T_NAME T_L_BRACK name_list . T_R_BRACK

    T_COMMA    shift, and go to state 102
    T_R_BRACK  shift, and go to state 227


State 201

  155 p_list: computation .

    $default  reduce using rule 155 (p_list)


State 202

  133 operand: T_NAME T_L_BRACK p_list . T_R_BRACK
  154 p_list: p_list . T_COMMA computation

    T_COMMA    shift, and go to state 228
    T_R_BRACK  shift, and go to state 229


State 203

  162 subscript: T_L_PAREN computation . T_R_PAREN

    T_R_PAREN  shift, and go to state 230


State 204

  161 variable: T_NAME subscript T_CIRCUMFLEX . subscript

    T_L_PAREN  shift, and go to state 136

    subscript  go to state 231


State 205

   95 proc_defn: proc_heading statements T_END .

    $default  reduce using rule 95 (proc_defn)


State 206

  107 opr_opd_seq: operand operator opr_opd_seq .

    $default  reduce using rule 107 (opr_opd_seq)


State 207

  130 operand: variable T_OF context .

    $default  reduce using rule 130 (operand)


State 208

  137 context: variable .
  138        | variable . T_OF context

    T_OF  shift, and go to state 232

    $default  reduce using rule 137 (context)


State 209

   19 t_list: t_list T_COMMA . scalar_type

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    scalar_type   go to state 233
    numeric_type  go to state 24


State 210

   17 pspec: T_L_BRACK t_list T_R_BRACK .
   18      | T_L_BRACK t_list T_R_BRACK . T_SLASH scalar_type

    T_SLASH  shift, and go to state 234

    $default  reduce using rule 17 (pspec)


State 211

   55 structure: fields T_OR structure .

    $default  reduce using rule 55 (structure)


State 212

   56 fields: fields type name_list .
   60 name_list: name_list . T_COMMA T_NAME

    T_COMMA  shift, and go to state 102

    $default  reduce using rule 56 (fields)


State 213

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK scalar_type . T_R_BRACK literals T_END

    T_R_BRACK  shift, and go to state 235


State 214

  166 for_st: T_FOR T_NAME T_LT computation . T_DO statements T_OD

    T_DO  shift, and go to state 236


State 215

   81 statements: statements . statement
  165 for_st: T_FOR computation T_DO statements . T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_OD                shift, and go to state 237
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 216

  141 test: T_L_PAREN condition T_R_PAREN .

    $default  reduce using rule 141 (test)


State 217

  146 compare_list: comparator computation . compare_list
  147             | comparator computation .

    T_EQUALS      shift, and go to state 177
    T_NOT_EQUALS  shift, and go to state 178
    T_LT          shift, and go to state 179
    T_GT          shift, and go to state 180
    T_LE          shift, and go to state 181
    T_GE          shift, and go to state 182

    $default  reduce using rule 147 (compare_list)

    compare_list  go to state 238
    comparator    go to state 184


State 218

   81 statements: statements . statement
  169 action: T_THEN statements . else_cl T_FI

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_ELSE              shift, and go to state 239
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    $default  reduce using rule 171 (else_cl)

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98
    else_cl                go to state 240


State 219

  168 action: T_COMMA go_st .

    $default  reduce using rule 168 (action)


State 220

  140 condition: test logop condition .

    $default  reduce using rule 140 (condition)


State 221

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN . any_type T_R_PAREN T_NAME T_EQUALS

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    any_type      go to state 241
    type          go to state 242
    scalar_type   go to state 23
    numeric_type  go to state 24


State 222

   97 proc_heading: T_PROC T_NAME T_L_BRACK T_R_BRACK .

    $default  reduce using rule 97 (proc_heading)


State 223

   60 name_list: name_list . T_COMMA T_NAME
   98 proc_heading: T_PROC T_NAME T_L_BRACK name_list . T_R_BRACK

    T_COMMA    shift, and go to state 102
    T_R_BRACK  shift, and go to state 243


State 224

   81 statements: statements . statement
  164 while_st: T_WHILE condition T_DO statements . T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_OD                shift, and go to state 244
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 225

  131 operand: T_CIRCUMFLEX variable T_OF context .

    $default  reduce using rule 131 (operand)


State 226

  134 operand: T_NAME T_CIRCUMFLEX T_L_BRACK p_list . T_R_BRACK
  154 p_list: p_list . T_COMMA computation

    T_COMMA    shift, and go to state 228
    T_R_BRACK  shift, and go to state 245


State 227

  157 built_in_function: T_NAME T_L_BRACK name_list T_R_BRACK .

    $default  reduce using rule 157 (built_in_function)


State 228

  154 p_list: p_list T_COMMA . computation

    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_NAME              shift, and go to state 120
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const              go to state 80
    dec_integer        go to state 60
    char_const         go to state 61
    computation        go to state 246
    opr_opd_seq        go to state 91
    operand            go to state 92
    built_in_function  go to state 93
    variable           go to state 94


State 229

  133 operand: T_NAME T_L_BRACK p_list T_R_BRACK .

    $default  reduce using rule 133 (operand)


State 230

  162 subscript: T_L_PAREN computation T_R_PAREN .

    $default  reduce using rule 162 (subscript)


State 231

  161 variable: T_NAME subscript T_CIRCUMFLEX subscript .

    $default  reduce using rule 161 (variable)


State 232

  138 context: variable T_OF . context

    T_NAME  shift, and go to state 129

    context   go to state 247
    variable  go to state 208


State 233

   19 t_list: t_list T_COMMA scalar_type .

    $default  reduce using rule 19 (t_list)


State 234

   18 pspec: T_L_BRACK t_list T_R_BRACK T_SLASH . scalar_type

    T_ADDR     shift, and go to state 4
    T_INTEGER  shift, and go to state 6
    T_LOGICAL  shift, and go to state 7
    T_REAL     shift, and go to state 11
    T_NAME     shift, and go to state 14

    scalar_type   go to state 248
    numeric_type  go to state 24


State 235

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK scalar_type T_R_BRACK . literals T_END

    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    literals      go to state 249
    literal_item  go to state 250
    literal       go to state 251
    const_expr    go to state 252
    const         go to state 253
    dec_integer   go to state 60
    char_const    go to state 61


State 236

  166 for_st: T_FOR T_NAME T_LT computation T_DO . statements T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 254
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 237

  165 for_st: T_FOR computation T_DO statements T_OD .

    $default  reduce using rule 165 (for_st)


State 238

  146 compare_list: comparator computation compare_list .

    $default  reduce using rule 146 (compare_list)


State 239

  170 else_cl: T_ELSE . statements

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statements             go to state 255
    statement              go to state 82
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 240

  169 action: T_THEN statements else_cl . T_FI

    T_FI  shift, and go to state 256


State 241

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN any_type . T_R_PAREN T_NAME T_EQUALS

    T_R_PAREN  shift, and go to state 257


State 242

   24 any_type: type .

    $default  reduce using rule 24 (any_type)


State 243

   98 proc_heading: T_PROC T_NAME T_L_BRACK name_list T_R_BRACK .

    $default  reduce using rule 98 (proc_heading)


State 244

  164 while_st: T_WHILE condition T_DO statements T_OD .

    $default  reduce using rule 164 (while_st)


State 245

  134 operand: T_NAME T_CIRCUMFLEX T_L_BRACK p_list T_R_BRACK .

    $default  reduce using rule 134 (operand)


State 246

  154 p_list: p_list T_COMMA computation .

    $default  reduce using rule 154 (p_list)


State 247

  138 context: variable T_OF context .

    $default  reduce using rule 138 (context)


State 248

   18 pspec: T_L_BRACK t_list T_R_BRACK T_SLASH scalar_type .

    $default  reduce using rule 18 (pspec)


State 249

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK scalar_type T_R_BRACK literals . T_END
   26 literals: literals . literal_item

    T_END               shift, and go to state 258
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    literal_item  go to state 259
    literal       go to state 251
    const_expr    go to state 252
    const         go to state 253
    dec_integer   go to state 60
    char_const    go to state 61


State 250

   27 literals: literal_item .

    $default  reduce using rule 27 (literals)


State 251

   28 literal_item: literal .
   29             | literal . T_L_PAREN const T_R_PAREN

    T_L_PAREN  shift, and go to state 260

    $default  reduce using rule 28 (literal_item)


State 252

   30 literal: const_expr .

    $default  reduce using rule 30 (literal)


State 253

   31 const_expr: const .
   32           | const . const_op const_expr

    T_PLUS       shift, and go to state 261
    T_MINUS      shift, and go to state 262
    T_STAR       shift, and go to state 263
    T_SLASH      shift, and go to state 264
    T_AMPERSAND  shift, and go to state 265

    T_PLUS    [reduce using rule 31 (const_expr)]
    T_MINUS   [reduce using rule 31 (const_expr)]
    $default  reduce using rule 31 (const_expr)

    const_op  go to state 266


State 254

   81 statements: statements . statement
  166 for_st: T_FOR T_NAME T_LT computation T_DO statements . T_OD

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_OD                shift, and go to state 267
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 255

   81 statements: statements . statement
  170 else_cl: T_ELSE statements .

    T_ADDR              shift, and go to state 4
    T_DATAVEC           shift, and go to state 64
    T_FOR               shift, and go to state 65
    T_IMPORT            shift, and go to state 5
    T_INTEGER           shift, and go to state 6
    T_IF                shift, and go to state 66
    T_LITERAL           shift, and go to state 67
    T_LOGICAL           shift, and go to state 7
    T_LSPEC             shift, and go to state 8
    T_PROC              shift, and go to state 68
    T_PSPEC             shift, and go to state 10
    T_REAL              shift, and go to state 11
    T_TYPE              shift, and go to state 12
    T_WHILE             shift, and go to state 69
    T_WITHIN            shift, and go to state 13
    T_CIRCUMFLEX        shift, and go to state 70
    T_L_BRACK           shift, and go to state 71
    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_GOTO              shift, and go to state 72
    T_NAME              shift, and go to state 73
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    $default  reduce using rule 170 (else_cl)

    proc_dec               go to state 74
    proc_dec_spec          go to state 18
    lit_dec                go to state 75
    data_vec               go to state 76
    type_dec               go to state 77
    var_dec                go to state 78
    import_dec             go to state 79
    type                   go to state 22
    scalar_type            go to state 23
    const                  go to state 80
    dec_integer            go to state 60
    char_const             go to state 61
    numeric_type           go to state 24
    statement              go to state 139
    declarative_statement  go to state 83
    imperative_statement   go to state 84
    proc_defn              go to state 85
    proc_heading           go to state 86
    label_dec              go to state 87
    comp_st                go to state 88
    control_st             go to state 89
    computation            go to state 90
    opr_opd_seq            go to state 91
    operand                go to state 92
    built_in_function      go to state 93
    variable               go to state 94
    if_st                  go to state 95
    while_st               go to state 96
    for_st                 go to state 97
    go_st                  go to state 98


State 256

  169 action: T_THEN statements else_cl T_FI .

    $default  reduce using rule 169 (action)


State 257

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN any_type T_R_PAREN . T_NAME T_EQUALS

    T_NAME  shift, and go to state 268


State 258

   25 data_vec: T_DATAVEC T_NAME T_L_BRACK scalar_type T_R_BRACK literals T_END .

    $default  reduce using rule 25 (data_vec)


State 259

   26 literals: literals literal_item .

    $default  reduce using rule 26 (literals)


State 260

   29 literal_item: literal T_L_PAREN . const T_R_PAREN

    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const        go to state 269
    dec_integer  go to state 60
    char_const   go to state 61


State 261

   33 const_op: T_PLUS .

    $default  reduce using rule 33 (const_op)


State 262

   34 const_op: T_MINUS .

    $default  reduce using rule 34 (const_op)


State 263

   36 const_op: T_STAR .

    $default  reduce using rule 36 (const_op)


State 264

   37 const_op: T_SLASH .

    $default  reduce using rule 37 (const_op)


State 265

   35 const_op: T_AMPERSAND .

    $default  reduce using rule 35 (const_op)


State 266

   32 const_expr: const const_op . const_expr

    T_PLUS              shift, and go to state 53
    T_MINUS             shift, and go to state 54
    T_CHAR_CONST        shift, and go to state 55
    T_MULTI_CHAR_CONST  shift, and go to state 56
    T_CH_STRING         shift, and go to state 57
    T_NUMBER            shift, and go to state 58

    const_expr   go to state 270
    const        go to state 253
    dec_integer  go to state 60
    char_const   go to state 61


State 267

  166 for_st: T_FOR T_NAME T_LT computation T_DO statements T_OD .

    $default  reduce using rule 166 (for_st)


State 268

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN any_type T_R_PAREN T_NAME . T_EQUALS

    T_EQUALS  shift, and go to state 271


State 269

   29 literal_item: literal T_L_PAREN const . T_R_PAREN

    T_R_PAREN  shift, and go to state 272


State 270

   32 const_expr: const const_op const_expr .

    $default  reduce using rule 32 (const_expr)


State 271

   23 pointer_lit: T_SLASH T_ADDR T_L_PAREN any_type T_R_PAREN T_NAME T_EQUALS .

    $default  reduce using rule 23 (pointer_lit)


State 272

   29 literal_item: literal T_L_PAREN const T_R_PAREN .

    $default  reduce using rule 29 (literal_item)
